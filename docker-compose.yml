
services:
  # NATS message broker
  nats:
    image: nats:2.9-alpine
    container_name: secbeat-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    networks:
      - secbeat-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test Origin Server (backend)
  test-origin:
    build:
      context: .
      dockerfile: Dockerfile
    image: secbeat/mitigation-node:latest
    container_name: secbeat-test-origin
    command: ["test-origin"]
    ports:
      - "8080:8080"
    networks:
      - secbeat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mitigation Node (proxy)
  mitigation-node:
    build:
      context: .
      dockerfile: Dockerfile
    image: secbeat/mitigation-node:latest
    container_name: secbeat-mitigation
    depends_on:
      - nats
      - test-origin
    ports:
      - "8443:8443"   # HTTPS proxy
      - "9090:9090"   # Prometheus metrics
      - "9191:9191"   # Internal metrics
      - "9999:9999"   # Management API
    environment:
      - SECBEAT_CONFIG=config.dev
      - RUST_LOG=info
      - SYN_COOKIE_SECRET=${SYN_COOKIE_SECRET:-$(openssl rand -hex 32)}
    volumes:
      - ./config.dev.toml:/app/config.dev.toml:ro
      - ./mitigation-node/config:/app/config:ro
      - ./mitigation-node/certs:/app/certs:ro
      - ./logs:/app/logs
    networks:
      - secbeat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9191/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Orchestrator Node (optional)
  orchestrator:
    build:
      context: .
      dockerfile: orchestrator.Dockerfile
    image: secbeat/orchestrator-node:latest
    container_name: secbeat-orchestrator
    ports:
      - "9090:9090"   # Orchestrator API
    environment:
      - RUST_LOG=info
    networks:
      - secbeat-network
    depends_on:
      - nats

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: secbeat-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - secbeat-network

  # Grafana dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: secbeat-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secbeat123
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning
      - grafana-storage:/var/lib/grafana
    networks:
      - secbeat-network

networks:
  secbeat-network:
    driver: bridge

volumes:
  grafana-storage:
